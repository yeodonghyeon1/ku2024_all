# 도착 인정 범위 (meters)
arrival_range: 1

# 장애물 탐지 (거리) 범위 (meters)
ob_dist_range : 4

# 장애물 탐지 (각도) 범위 (deg)
ob_angle_range : [-100, 100]

etk_use : True  # extended kalman filiter; if you have True then you can't use fake_gps.launch

# 장애물 좌우에 추가할 안전 각도 (deg)
span_angle : 15

# 선수각 및 서보모터 이동평균필터 큐 사이즈
filter_queue_size: 3

# 서보모터 회전 범위 (deg)
angle_range: [-90, 90]

# 서보모터 제어값 범위
servo_range: [70, 120]

# 서보모터 제어값 결정 상수
angle_alpha: 1.5


# 쓰러스터 PWM 신호 (선속)
thruster_auto: 1800 # 자율운항 모드 ~ 도킹 시작 지점
thruster_station: 1720 # 각 스테이션 간 이동
thruster_rotate: 1600 # 선수각 회전
thruster_stop: 1550 # 마크 탐지 시 제자리 정지(혹은 약한 전진)
thruster_back: 1500 # 스테이션 도착 직후 제자리 정지(혹은 약한 후진)

# 스테이션 도착 후 일시정지 (루프문 횟수)(hz와 시간 유사)
stop_time: 20

# 선수각 회전 인정 범위 (deg)
ref_dir_range: 10

# 스테이션 방향 선수각
station_dir: -10

# 표지 색 범위
color_range : {
  red: {
    color1_lower: 39,
    color1_upper: 99,
    color2_lower: 45,
    color2_upper: 105,
    color3_lower: 129,
    color3_upper: 199
  },
  red_2: {
    color1_lower: 134,
    color1_upper: 232,
    color2_lower: 135,
    color2_upper: 255,
    color3_lower: 132,
    color3_upper: 255
  },
  green: {
    color1_lower: 40, 
    color1_upper: 100,
    color2_lower: 61,
    color2_upper: 255, 
    color3_lower: 0,
    color3_upper: 250,
  },
  blue: {
    color1_lower: 181,
    color1_upper: 201,
    color2_lower: 105,
    color2_upper: 125,
    color3_lower: 106,
    color3_upper: 126
  },
  black: {
    color1_lower: 0,
    color1_upper: 0,
    color2_lower: 0,
    color2_upper: 0,
    color3_lower: 0,
    color3_upper: 22
  },

  black2: {
    color1_lower: 255,
    color1_upper: 255,
    color2_lower: 255,
    color2_upper: 255,
    color3_lower: 240,
    color3_upper: 255
  },

  orange: {
    color1_lower: 0,
    color1_upper: 255,
    color2_lower: 0,
    color2_upper: 255,
    color3_lower: 0,
    color3_upper: 255
  }
}


board_color_range : {
  red: {
    color1_lower: 39,
    color1_upper: 99,
    color2_lower: 45,
    color2_upper: 105,
    color3_lower: 129,
    color3_upper: 199
  },
  brown: {
    color1_lower: 41, 
    color1_upper: 101,
    color2_lower: 67,
    color2_upper: 127, 
    color3_lower: 120,
    color3_upper: 180,
  }, 
  blue: {
    color1_lower: 96,
    color1_upper: 136,
    color2_lower: 61,
    color2_upper: 101,
    color3_lower: 58,
    color3_upper: 98
  }
}

# 목표 모양 (3: triangle, 12: cross, 4: square 8: circle) # fix 0: circle, 1: square, 2: cross 3: triangle
target_shape: 4

# 목표 색깔 (red, green, blue, black, black2, orange)
target_color: red

# 인식 최소 크기 (최소 이만큼은 되어야 인지 시작, 이보다 작으면 무시)
mark_detect_area: 200
# 타겟 인정 크기 (최소 이만큼은 되어야 타겟이라고 인정)
target_detect_area: 250

# 타겟 판단 대기 시간 (루프 반복 횟수) roof
target_detect_time: 100

# 타겟 판단 임곗값 (루프 반복 횟수)(target_detect_time 중 이만큼은 되어야 타겟 발견으로 인정)
target_detect_cnt: 10

# 실시간 인식 현황 시각화 여부
draw_contour: True

# 도착 인정 크기 (최소 이만큼은 되어야 도크 완료)
arrival_target_area: 10000

# 픽셀 단위를 각도 단위로 바꾸는 연산에 사용할 계수
pixel_alpha: 500

find_time : 1000
